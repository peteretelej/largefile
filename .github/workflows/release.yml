name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  test-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: uv sync --dev

    - name: Run tests
      run: uv run pytest -v --tb=short

    - name: Run type checking
      run: uv run mypy src

    - name: Run linting
      run: uv run ruff check .

    - name: Check formatting
      run: uv run ruff format --check

  build:
    runs-on: ubuntu-latest
    needs: test-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      run: uv python install 3.11

    - name: Validate tag matches pyproject.toml version
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        PYPROJECT_VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
        
        if [ "$TAG_VERSION" != "$PYPROJECT_VERSION" ]; then
          echo "Error: Tag version ($TAG_VERSION) does not match pyproject.toml version ($PYPROJECT_VERSION)"
          exit 1
        fi
        
        echo "Version validation passed: $TAG_VERSION"

    - name: Install dependencies
      run: uv sync --dev

    - name: Run tests
      run: uv run pytest

    - name: Build package
      run: uv build

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        generate_release_notes: true

  publish-pypi:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/project/largefile/

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      run: uv python install 3.11

    - name: Build package
      run: uv build

    - name: Publish to PyPI
      run: uv publish
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}